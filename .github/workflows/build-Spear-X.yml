name: Build and Run SpearX

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      # 1. 安装 Go 环境
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24'

      # 2. 安装 Wails CLI
      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      # 3. 安装 Node.js
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 4. 克隆远程仓库
      - name: Clone remote Spear
        run: git clone https://github.com/sspsec/Spear.git

      # 5. 构建 SpearX
      - name: Build SpearX
        run: |
          cd Spear
          cd 'Spear X'
          cd frontend
          npm install
          cd ..
          wails build

      # 6. 重命名产物
      - name: Rename artifact
        run: |
          cd "Spear/Spear X/build/bin"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            mv SpearX.exe SpearX-windows.exe
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv SpearX SpearX-macos
          else
            mv SpearX SpearX-linux
          fi

      # 7. 列出构建产物目录（调试用）
      - name: List build/bin
        run: ls -R "Spear/Spear X/build/bin"

      # 8. 上传构建产物
      - name: Upload SpearX artifact
        uses: actions/upload-artifact@v4
        with:
          name: SpearX-${{ matrix.os }}
          path: |
            Spear/Spear X/build/bin/*
